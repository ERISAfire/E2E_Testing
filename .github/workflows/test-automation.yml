name: Test Automation Framework CI/CD

on:
  workflow_dispatch:
    inputs:
      testTags:
        description: 'Tags to run (e.g. @smoke, @regression, @api, @ui, @critical, @auth)'
        required: true
        default: '@smoke'
        type: string
      branch:
        description: 'Branch to run tests from'
        required: true
        default: 'main'
        type: string

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Create .env file
        run: |
          cat > .env << EOF
          BASE_URL=${{ secrets.BASE_URL }}
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          USER_EMAIL=${{ secrets.USER_EMAIL }}
          USER_PASSWORD=${{ secrets.USER_PASSWORD }}
          API_BEARER_TOKEN=${{ secrets.API_BEARER_TOKEN }}
          EOF

      - name: Build project
        run: npm run build

      - name: Run API tests
        if: contains(github.event.inputs.testTags, '@api') || !contains(github.event.inputs.testTags, '@ui')
        run: |
          npx tsc --build
          npx playwright test --workers=2 --grep "${{ github.event.inputs.testTags }}.*@api"
        env:
          NODE_OPTIONS: '--experimental-modules --es-module-specifier-resolution=node'
          PLAYWRIGHT_TEST_TIMEOUT: '120000'

      - name: Run UI tests
        if: contains(github.event.inputs.testTags, '@ui') || !contains(github.event.inputs.testTags, '@api')
        run: |
          npx tsc --build
          npx playwright test --workers=2 --grep "${{ github.event.inputs.testTags }}.*@ui"
        env:
          NODE_OPTIONS: '--experimental-modules --es-module-specifier-resolution=node'
          PLAYWRIGHT_TEST_TIMEOUT: '120000'

      - name: Generate Allure Report
        if: always()
        run: npm run allure:static

      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: allure-report/
          retention-days: 30
